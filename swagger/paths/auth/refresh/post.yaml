tags:
  - Auth
summary: Refresh user session
operationId: refreshUser
description: 'Refresh user session'
parameters:
  - in: cookie
    name: refreshToken
    required: true
    schema:
      type: string
    description: The refresh token used to generate a new access token. Cookies are only sent after you are logged in and have received their binding from the server.
  - in: cookie
    name: sessionId
    required: true
    schema:
      type: string
    description: The session id used to generate a new access token. Cookies are only sent after you are logged in and have received their binding from the server.
security: []
responses:
  '200':
    description: Successfully refreshed a session!
    headers:
      Set-Cookie:
        description: refreshToken and sessionId. Each cookie is sent as a separate `Set-Cookie` header.
        schema:
          type: array
          items:
            type: string
          example:
            - refreshToken=hYzPTX09KszbBoxpBivWWWjzJ24sK1p0YzNs7Ae8; Path=/; Expires=Sat, 15 Feb 2025 17:17:17 GMT; HttpOnly
            - sessionId=j%3A%2267893f1d3b71dfff71c02b49%22; Path=/; Expires=Sat, 15 Feb 2025 17:17:17 GMT; HttpOnly
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully refreshed a session!
            data:
              type: object
              required:
                - accessToken
              properties:
                accessToken:
                  type: string
                  example: lftFQbLqpWnAB6VyTrkuUpVa1fmrYC3j/tlU982S
  '401':
    $ref: '../../../components/responses/refresh/401.yaml'
